import { sql } from "drizzle-orm";
import {
  boolean,
  integer,
  pgEnum,
  pgTable,
  serial,
  text,
  timestamp,
  varchar,
} from "drizzle-orm/pg-core";

// üåè Timestamp fields (Asia/Bangkok timezone)
const createdAt = timestamp("created_at", {
  mode: "date",
})
  .default(sql`(NOW() AT TIME ZONE 'Asia/Bangkok')`)
  .notNull();

const updatedAt = timestamp("updated_at", {
  mode: "date",
})
  .default(sql`(NOW() AT TIME ZONE 'Asia/Bangkok')`)
  .notNull();

// ENUM ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
// Use pgEnum.create() to reference an existing enum instead of trying to create it
export const reservationStatusEnum = pgEnum("reservation_status", [
  "pending", // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà assign ‡∏£‡∏ñ/‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö
  "confirmed", // assign ‡πÅ‡∏•‡πâ‡∏ß
  "cancelled", // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
  "completed", // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
]);

// üöó Vehicles
export const vehicles = pgTable("vehicles", {
  id: serial("id").primaryKey(),
  licensePlate: varchar("license_plate", { length: 20 }).notNull().unique(),
  brand: varchar("brand", { length: 50 }).notNull(),
  type: varchar("type", { length: 50 }).notNull(), // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó ‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏ñ‡πÄ‡∏Å‡πã‡∏á, ‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å
  model: varchar("model", { length: 50 }), // ‚úÖ ‡∏£‡∏∏‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô Altis, Fortuner
  variant: varchar("variant", { length: 50 }),
  active: boolean("active").default(true),
  imageUrl: varchar("image_url", { length: 255 }),
  createdAt,
  updatedAt,
});

// üßë‚Äç‚úàÔ∏è Drivers
export const drivers = pgTable("drivers", {
  id: serial("id").primaryKey(),
  name: varchar("name", { length: 100 }).notNull(),
  phone: varchar("phone", { length: 20 }),
  active: boolean("active").default(true),
  imageUrl: varchar("image_url", { length: 255 }), // ‡πÄ‡∏û‡∏¥‡πà‡∏° imageUrl ‡πÄ‡∏õ‡πá‡∏ô string
  createdAt,
  updatedAt,
});

// üë§ Customers (‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏ñ)
export const customers = pgTable("customers", {
  id: serial("id").primaryKey(),
  name: varchar("name", { length: 100 }).notNull(),
  phone: varchar("phone", { length: 20 }),
  active: boolean("active").default(true),
  imageUrl: varchar("image_url", { length: 255 }), // ‡πÄ‡∏û‡∏¥‡πà‡∏° imageUrl ‡πÄ‡∏õ‡πá‡∏ô string
  createdAt,
  updatedAt,
});

// üìÖ Reservations (‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏£‡∏ñ)
export const reservations = pgTable("reservations", {
  id: serial("id").primaryKey(),

  // ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏£‡∏ñ
  customerId: integer("customer_id")
    .notNull()
    .references(() => customers.id),

  // ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏ñ)
  reservedByName: varchar("reserved_by_name", { length: 100 }).notNull(),

  // ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
  date: timestamp("date").notNull(),
  timeStart: varchar("time_start", { length: 10 }).notNull(),
  timeEnd: varchar("time_end", { length: 10 }).notNull(),
  purpose: text("purpose"),
  pickupLocation: text("pickup_location"),
  dropoffLocation: text("dropoff_location"),

  // ‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö (optional ‡∏ï‡∏≠‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ assign)
  vehicleId: integer("vehicle_id").references(() => vehicles.id),
  driverId: integer("driver_id").references(() => drivers.id),

  passengerCount: integer("passenger_count"),
  passengerInfo: text("passenger_info"), // JSON string ‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô '[{"name":"A","phone":"123"}]'

  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
  status: reservationStatusEnum("status").notNull().default("pending"),

  imageUrl: varchar("image_url", { length: 255 }), // ‡πÄ‡∏û‡∏¥‡πà‡∏° imageUrl ‡πÄ‡∏õ‡πá‡∏ô string
  createdAt,
  updatedAt,
});
